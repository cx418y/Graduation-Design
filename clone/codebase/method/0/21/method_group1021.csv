"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"128","21","63","62","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java","425","445","-2147470000","-2147469914","0","0","void doesNotMatchExactlyWhenOneMultipartBodyPatternDoesNotMatch()","void doesNotMatchExactlyWhenOneMultipartBodyPatternDoesNotMatch(){
    RequestPattern requestPattern =
        newRequestPattern(PUT, urlPathEqualTo(""/my/url""))
            .withAnyRequestBodyPart(
                aMultipart().withName(""part-2"").withBody(containing(""non existing part"")))
            .build();

    MatchResult matchResult =
        requestPattern.match(
            mockRequest()
                .method(PUT)
                .url(""/my/url"")
                .header(""Content-Type"", ""multipart/form-data; boundary=BOUNDARY"")
                .multipartBody(
                    ""--BOUNDARY\r\nContent-Disposition: form-data; name=\""part-2\""; filename=\""\""\r\nContent-Type: application/octet-stream\r\nContent-Transfer-Encoding: base64\r\n\r\n""
                        + ""c29tZSBvdGhlciBib2R5IHZhbHVl\r\n""
                        + // some other body value
                        ""--BOUNDARY--""));

    assertFalse(matchResult.isExactMatch());
  }"
"129","21","78","77","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java","448","470","-2147469914","-2147469826","0","0","void doesNotMatchExactlyWhenOneMultipartHeaderPatternDoesNotMatch()","void doesNotMatchExactlyWhenOneMultipartHeaderPatternDoesNotMatch(){
    RequestPattern requestPattern =
        newRequestPattern(PUT, urlPathEqualTo(""/my/url""))
            .withAnyRequestBodyPart(
                aMultipart()
                    .withName(""part-1"")
                    .withHeader(""Content-Type"", containing(""application/json"")))
            .build();

    MatchResult matchResult =
        requestPattern.match(
            mockRequest()
                .method(PUT)
                .url(""/my/url"")
                .header(""Content-Type"", ""multipart/form-data; boundary=BOUNDARY"")
                .multipartBody(
                    ""--BOUNDARY\r\nContent-Disposition: form-data; name=\""part-1\""; filename=\""\""\r\nContent-Type: application/octet-stream\r\nContent-Transfer-Encoding: base64\r\n\r\n""
                        + ""c29tZSBvdGhlciBib2R5IHZhbHVl\r\n""
                        + // some other body value
                        ""--BOUNDARY--""));

    assertFalse(matchResult.isExactMatch());
  }"
