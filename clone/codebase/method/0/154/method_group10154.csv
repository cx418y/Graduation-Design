"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1128","154","565","564","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java","102","118","-2147380222","-2147380110","0","0","void testReplace()","void testReplace(){

    StubMapping existingMapping = aMapping(1, ""/priority1/1"");
    mappingSet.add(existingMapping);

    existingMapping.setNewScenarioState(""New Scenario State"");

    StubMapping newMapping = aMapping(2, ""/priority2/1"");
    boolean result = mappingSet.replace(existingMapping, newMapping);

    Iterator<StubMapping> it = mappingSet.iterator();

    assertThat(result, is(true));
    assertThat(it.hasNext(), is(true));
    assertThat(it.next(), is(newMapping));
    assertThat(it.hasNext(), is(false));
  }"
"1129","154","569","568","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java","121","135","-2147380110","-2147380000","0","0","void testReplaceNotExists()","void testReplaceNotExists(){

    StubMapping existingMapping = aMapping(1, ""/priority1/1"");
    mappingSet.add(existingMapping);

    StubMapping newMapping = aMapping(2, ""/priority2/1"");
    boolean result = mappingSet.replace(aMapping(2, ""/priority2/2""), newMapping);

    Iterator<StubMapping> it = mappingSet.iterator();

    assertThat(result, is(false));
    assertThat(it.hasNext(), is(true));
    assertThat(it.next(), is(existingMapping));
    assertThat(it.hasNext(), is(false));
  }"
