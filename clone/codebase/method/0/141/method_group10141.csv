"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1014","141","506","505","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java","85","106","-2147392463","-2147392313","0","0","void responseWithByteDribble()","void responseWithByteDribble(){
    byte[] body = new byte[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int numberOfChunks = body.length / 2;
    int chunkedDuration = 1000;

    stubFor(
        get(urlEqualTo(""/dribble""))
            .willReturn(
                aResponse()
                    .withStatus(200)
                    .withBody(body)
                    .withChunkedDribbleDelay(numberOfChunks, chunkedDuration)));

    long start = System.currentTimeMillis();
    WireMockResponse response = testClient.get(""/dribble"");
    long timeTaken = System.currentTimeMillis() - start;

    assertThat(response.statusCode(), is(200));
    assertThat(timeTaken, greaterThanOrEqualTo((long) chunkedDuration));

    assertThat(body, is(response.binaryContent()));
  }"
"1015","141","508","507","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java","109","133","-2147392313","-2147392146","0","0","void responseWithByteDribbleAndFixedDelay()","void responseWithByteDribbleAndFixedDelay(){
    byte[] body = new byte[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int numberOfChunks = body.length / 2;
    int fixedDelay = 1000;
    int chunkedDuration = 1000;
    int totalDuration = fixedDelay + chunkedDuration;

    stubFor(
        get(urlEqualTo(""/dribbleWithFixedDelay""))
            .willReturn(
                aResponse()
                    .withStatus(200)
                    .withBody(body)
                    .withChunkedDribbleDelay(numberOfChunks, chunkedDuration)
                    .withFixedDelay(fixedDelay)));

    long start = System.currentTimeMillis();
    WireMockResponse response = testClient.get(""/dribbleWithFixedDelay"");
    long timeTaken = System.currentTimeMillis() - start;

    assertThat(response.statusCode(), is(200));
    assertThat(timeTaken, greaterThanOrEqualTo((long) totalDuration));

    assertThat(body, is(response.binaryContent()));
  }"
