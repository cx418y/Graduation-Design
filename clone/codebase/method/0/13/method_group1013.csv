"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"92","13","47","46","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java","220","239","-2147473166","-2147473046","0","0","void equalsShouldReturnTrueOnIdenticalButNotSameObjects()","void equalsShouldReturnTrueOnIdenticalButNotSameObjects(){
    MultipartValuePattern patternA =
        aMultipart()
            .withName(""title"")
            .withHeader(""X-First-Header"", equalTo(""One""))
            .withHeader(""X-Second-Header"", matching("".*2""))
            .withBody(equalToJson(""{ \""thing\"": 123 }""))
            .build();

    MultipartValuePattern patternB =
        aMultipart()
            .withName(""title"")
            .withHeader(""X-First-Header"", equalTo(""One""))
            .withHeader(""X-Second-Header"", matching("".*2""))
            .withBody(equalToJson(""{ \""thing\"": 123 }""))
            .build();

    assertThat(patternA.equals(patternB), is(true));
    assertEquals(patternA.hashCode(), patternB.hashCode());
  }"
"93","13","50","49","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java","242","260","-2147473046","-2147472936","0","0","void equalsShouldReturnFalseOnDifferentObjects()","void equalsShouldReturnFalseOnDifferentObjects(){
    MultipartValuePattern patternA =
        aMultipart()
            .withName(""title"")
            .withHeader(""X-First-Header"", equalTo(""One""))
            .withHeader(""X-Second-Header"", matching("".*2""))
            .withBody(equalToJson(""{ \""thing\"": 123 }""))
            .build();

    MultipartValuePattern patternB =
        aMultipart()
            .withName(""anotherTitle"")
            .withHeader(""X-Second-Header"", matching("".*2""))
            .withBody(equalToJson(""{ \""thing\"": \""abc\"" }""))
            .build();

    assertThat(patternA.equals(patternB), is(false));
    assertNotEquals(patternA.hashCode(), patternB.hashCode());
  }"
