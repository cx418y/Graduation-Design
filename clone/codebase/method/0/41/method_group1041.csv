"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"296","41","147","146","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java","79","94","-2147453469","-2147453358","0","0","void filterCanBeAppliedToAdmin()","void filterCanBeAppliedToAdmin(){
    initialise(new AdminAuthenticatingFilter());

    wm.stubFor(get(url).willReturn(ok()));

    String adminUrl = ""/__admin/mappings"";
    WireMockResponse good = client.get(adminUrl, withHeader(""Authorization"", ""Token 123""));
    assertThat(good.statusCode(), is(200));

    WireMockResponse bad = client.get(adminUrl);
    assertThat(bad.statusCode(), is(401));

    // Stubs are unaffected
    WireMockResponse stub = client.get(url);
    assertThat(stub.statusCode(), is(200));
  }"
"297","41","147","146","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java","97","112","-2147453358","-2147453247","0","0","void filterCanBeAppliedToStubs()","void filterCanBeAppliedToStubs(){
    initialise(new StubAuthenticatingFilter());

    wm.stubFor(get(url).willReturn(ok()));

    String adminUrl = ""/__admin/mappings"";
    WireMockResponse good = client.get(url, withHeader(""Authorization"", ""Token 123""));
    assertThat(good.statusCode(), is(200));

    WireMockResponse bad = client.get(url);
    assertThat(bad.statusCode(), is(401));

    // Admin routes are unaffected
    WireMockResponse stub = client.get(adminUrl);
    assertThat(stub.statusCode(), is(200));
  }"
