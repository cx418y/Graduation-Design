"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1086","148","536","535","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java","52","62","-2147384970","-2147384888","0","0","void correctlyAcceptsMappingAndReturnsCorrespondingResponse()","void correctlyAcceptsMappingAndReturnsCorrespondingResponse(){
    mappings.addMapping(
        new StubMapping(
            newRequestPattern(PUT, urlEqualTo(""/some/resource"")).build(),
            new ResponseDefinition(204, """")));

    Request request = aRequest().withMethod(PUT).withUrl(""/some/resource"").build();
    ResponseDefinition response = mappings.serveFor(request).getResponseDefinition();

    assertThat(response.getStatus(), is(204));
  }"
"1087","148","536","537","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java","65","75","-2147384888","-2147384806","0","0","void returnsNotFoundWhenMethodIncorrect()","void returnsNotFoundWhenMethodIncorrect(){
    mappings.addMapping(
        new StubMapping(
            newRequestPattern(PUT, urlEqualTo(""/some/resource"")).build(),
            new ResponseDefinition(204, """")));

    Request request = aRequest().withMethod(POST).withUrl(""/some/resource"").build();
    ResponseDefinition response = mappings.serveFor(request).getResponseDefinition();

    assertThat(response.getStatus(), is(HTTP_NOT_FOUND));
  }"
"1088","148","536","541","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java","78","88","-2147384806","-2147384724","0","0","void returnsNotFoundWhenUrlIncorrect()","void returnsNotFoundWhenUrlIncorrect(){
    mappings.addMapping(
        new StubMapping(
            newRequestPattern(PUT, urlEqualTo(""/some/resource"")).build(),
            new ResponseDefinition(204, """")));

    Request request = aRequest().withMethod(PUT).withUrl(""/some/bad/resource"").build();
    ResponseDefinition response = mappings.serveFor(request).getResponseDefinition();

    assertThat(response.getStatus(), is(HTTP_NOT_FOUND));
  }"
