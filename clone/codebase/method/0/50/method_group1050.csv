"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"366","50","169","168","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/RegexExtractHelperTest.java","42","53","-2147448388","-2147448330","0","0","void canExtractSingleRegexMatch()","void canExtractSingleRegexMatch(){
    final ResponseDefinition responseDefinition =
        this.transformer.transform(
            mockRequest().url(""/api/abc,def,ghi""),
            aResponse()
                .withBody(""{\""test\"": \""{{regexExtract request.path.[1] '([A-Za-z]+)'}}\""}"")
                .build(),
            noFileSource(),
            Parameters.empty());

    assertThat(responseDefinition.getBody(), is(""{\""test\"": \""abc\""}""));
  }"
"367","50","169","168","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/RegexExtractHelperTest.java","56","68","-2147448330","-2147448272","0","0","void canExtractMultipleRegexMatches()","void canExtractMultipleRegexMatches(){
    final ResponseDefinition responseDefinition =
        this.transformer.transform(
            mockRequest().url(""/api/abc,def,ghi""),
            aResponse()
                .withBody(
                    ""{\""test\"": \""{{regexExtract request.path.[1] '([A-Za-z]+)' 'parts'}}{{#each parts}}{{this}} {{/each}}\""}"")
                .build(),
            noFileSource(),
            Parameters.empty());

    assertThat(responseDefinition.getBody(), is(""{\""test\"": \""abc def ghi \""}""));
  }"
