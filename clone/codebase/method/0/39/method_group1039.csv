"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"266","39","137","136","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java","38","47","-2147456847","-2147456769","0","0","void returnsEvenlyChunkedBody()","void returnsEvenlyChunkedBody(){
    byte[] body = ""1234"".getBytes();
    int numberOfChunks = 2;

    byte[][] chunkedBody = BodyChunker.chunkBody(body, numberOfChunks);

    assertThat(chunkedBody, arrayWithSize(numberOfChunks));
    assertThat(chunkedBody[0], equalTo(""12"".getBytes()));
    assertThat(chunkedBody[1], equalTo(""34"".getBytes()));
  }"
"267","39","145","144","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java","50","60","-2147456769","-2147456674","0","0","void addsExcessBytesToLastChunk()","void addsExcessBytesToLastChunk(){
    byte[] body = ""1234"".getBytes();
    int numberOfChunks = 3;

    byte[][] chunkedBody = BodyChunker.chunkBody(body, numberOfChunks);

    assertThat(chunkedBody, arrayWithSize(numberOfChunks));
    assertThat(chunkedBody[0], equalTo(""1"".getBytes()));
    assertThat(chunkedBody[1], equalTo(""2"".getBytes()));
    assertThat(chunkedBody[2], equalTo(""34"".getBytes()));
  }"
