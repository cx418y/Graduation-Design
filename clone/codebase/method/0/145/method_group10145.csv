"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1051","145","522","521","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java","93","100","-2147388869","-2147388780","0","0","void inlineCustomRequestMatcherCanBeCombinedWithStandardMatchers()","void inlineCustomRequestMatcherCanBeCombinedWithStandardMatchers(){
    wmRule.stubFor(
        get(urlPathMatching(""/the/.*/one"")).andMatching(new MyRequestMatcher()).willReturn(ok()));

    assertThat(client.get(""/the/correct/one"").statusCode(), is(200));
    assertThat(client.get(""/the/wrong/one"").statusCode(), is(404));
    assertThat(client.postJson(""/the/correct/one"", ""{}"").statusCode(), is(404));
  }"
"1052","145","526","525","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java","103","112","-2147388780","-2147388685","0","0","void namedCustomRequestMatcherCanBeCombinedWithStandardMatchers()","void namedCustomRequestMatcherCanBeCombinedWithStandardMatchers(){
    wm.register(
        get(urlPathMatching(""/the/.*/one""))
            .andMatching(""path-contains-param"", Parameters.one(""path"", ""correct""))
            .willReturn(ok()));

    assertThat(client.get(""/the/correct/one"").statusCode(), is(200));
    assertThat(client.get(""/the/wrong/one"").statusCode(), is(404));
    assertThat(client.postJson(""/the/correct/one"", ""{}"").statusCode(), is(404));
  }"
