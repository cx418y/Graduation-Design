"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"751","105","382","381","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionNonStaticMultiInstanceTest.java","66","84","-2147414097","-2147413936","0","0","void extension_field_provides_wiremock_info()","void extension_field_provides_wiremock_info(){
    WireMockRuntimeInfo wm1RuntimeInfo = wm1.getRuntimeInfo();
    assertDoesNotThrow(wm1RuntimeInfo::getHttpsPort);

    stubFor(get(""/wm1"").willReturn(ok()));
    HttpGet request = new HttpGet(wm1RuntimeInfo.getHttpsBaseUrl() + ""/wm1"");
    try (CloseableHttpResponse response = client.execute(request)) {
      assertThat(response.getCode(), is(200));
    }

    WireMockRuntimeInfo wm2RuntimeInfo = wm2.getRuntimeInfo();
    wm2.stubFor(get(""/wm2"").willReturn(ok(""{{request.path.0}}"")));
    request = new HttpGet(wm2RuntimeInfo.getHttpBaseUrl() + ""/wm2"");
    try (CloseableHttpResponse response = client.execute(request)) {
      assertThat(response.getCode(), is(200));
      assertThat(
          EntityUtils.toString(response.getEntity()), is(""wm2"")); // Ensures templating is enabled
    }
  }"
"753","105","382","381","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionStaticMultiInstanceTest.java","66","84","-2147413871","-2147413710","0","0","void extension_field_provides_wiremock_info()","void extension_field_provides_wiremock_info(){
    WireMockRuntimeInfo wm1RuntimeInfo = wm1.getRuntimeInfo();
    assertDoesNotThrow(wm1RuntimeInfo::getHttpsPort);

    stubFor(get(""/wm1"").willReturn(ok()));
    HttpGet request = new HttpGet(wm1RuntimeInfo.getHttpsBaseUrl() + ""/wm1"");
    try (CloseableHttpResponse response = client.execute(request)) {
      assertThat(response.getCode(), is(200));
    }

    WireMockRuntimeInfo wm2RuntimeInfo = wm2.getRuntimeInfo();
    wm2.stubFor(get(""/wm2"").willReturn(ok(""{{request.path.0}}"")));
    request = new HttpGet(wm2RuntimeInfo.getHttpBaseUrl() + ""/wm2"");
    try (CloseableHttpResponse response = client.execute(request)) {
      assertThat(response.getCode(), is(200));
      assertThat(
          EntityUtils.toString(response.getEntity()), is(""wm2"")); // Ensures templating is enabled
    }
  }"
