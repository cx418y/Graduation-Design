"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"118","19","61","60","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java","223","234","-2147471026","-2147470940","0","0","void matchesExactlyWith0DistanceWhenAllRequiredQueryParametersMatch()","void matchesExactlyWith0DistanceWhenAllRequiredQueryParametersMatch(){
    RequestPattern requestPattern =
        newRequestPattern(PUT, urlPathEqualTo(""/my/url""))
            .withQueryParam(""param1"", equalTo(""1""))
            .withQueryParam(""param2"", equalTo(""2""))
            .build();

    MatchResult matchResult =
        requestPattern.match(mockRequest().method(PUT).url(""/my/url?param1=1&param1=555&param2=2""));
    assertThat(matchResult.getDistance(), is(0.0));
    assertTrue(matchResult.isExactMatch());
  }"
"119","19","61","65","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java","237","248","-2147470940","-2147470854","0","0","void returnsNon0DistanceWhenRequiredQueryParameterMatchDoesNotMatch()","void returnsNon0DistanceWhenRequiredQueryParameterMatchDoesNotMatch(){
    RequestPattern requestPattern =
        newRequestPattern(PUT, urlPathEqualTo(""/my/url""))
            .withQueryParam(""param1"", equalTo(""1""))
            .withQueryParam(""param2"", equalTo(""2""))
            .build();

    MatchResult matchResult =
        requestPattern.match(mockRequest().method(PUT).url(""/my/url?param1=555&param2=2""));
    assertThat(matchResult.getDistance(), greaterThan(0.0));
    assertFalse(matchResult.isExactMatch());
  }"
