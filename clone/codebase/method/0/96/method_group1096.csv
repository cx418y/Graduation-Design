"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"689","96","340","339","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java","31","38","-2147420276","-2147420204","0","0","void returnsWholeListWhenBothParametersAreNull()","void returnsWholeListWhenBothParametersAreNull(){
    List<Integer> source = asList(1, 2, 3, 4, 5);
    LimitAndOffsetPaginator<Integer> paginator = new LimitAndOffsetPaginator<>(source, null, null);

    List<Integer> result = paginator.select();

    assertThat(result, is(asList(1, 2, 3, 4, 5)));
  }"
"692","96","345","344","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java","61","68","-2147420077","-2147420009","0","0","void returnsFromOffSetToTheEndWhenOnlyOffsetIsSpecified()","void returnsFromOffSetToTheEndWhenOnlyOffsetIsSpecified(){
    List<Integer> source = asList(1, 2, 3, 4, 5);
    LimitAndOffsetPaginator<Integer> paginator = new LimitAndOffsetPaginator<>(source, null, 2);

    List<Integer> result = paginator.select();

    assertThat(result, is(asList(3, 4, 5)));
  }"
