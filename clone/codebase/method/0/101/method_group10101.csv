"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"731","101","367","366","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java","544","559","-2147415934","-2147415819","0","0","void fixedDelaysAreAddedToProxiedResponses()","void fixedDelaysAreAddedToProxiedResponses(){
    initWithDefaultConfig();

    target.register(get(""/delayed"").willReturn(ok()));
    proxy.register(
        any(anyUrl())
            .willReturn(aResponse().proxiedFrom(targetServiceBaseUrl).withFixedDelay(300)));

    Stopwatch stopwatch = Stopwatch.createStarted();
    WireMockResponse response =
        testClient.getViaProxy(""http://localhost:"" + proxyingService.port() + ""/delayed"");
    stopwatch.stop();

    assertThat(response.statusCode(), is(200));
    assertThat(stopwatch.elapsed(MILLISECONDS), greaterThanOrEqualTo(300L));
  }"
"732","101","376","375","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java","562","578","-2147415819","-2147415702","0","0","void chunkedDribbleDelayIsAddedToProxiedResponse()","void chunkedDribbleDelayIsAddedToProxiedResponse(){
    initWithDefaultConfig();

    target.register(get(""/chunk-delayed"").willReturn(ok()));
    proxy.register(
        any(anyUrl())
            .willReturn(
                aResponse().proxiedFrom(targetServiceBaseUrl).withChunkedDribbleDelay(10, 300)));

    Stopwatch stopwatch = Stopwatch.createStarted();
    WireMockResponse response =
        testClient.getViaProxy(""http://localhost:"" + proxyingService.port() + ""/chunk-delayed"");
    stopwatch.stop();

    assertThat(response.statusCode(), is(200));
    assertThat(stopwatch.elapsed(MILLISECONDS), greaterThanOrEqualTo(300L));
  }"
