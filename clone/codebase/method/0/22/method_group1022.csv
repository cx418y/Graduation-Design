"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"137","22","71","70","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java","613","629","-2147469191","-2147469119","0","0","Matcher<ContentPattern<?>> valuePattern(
      final Class<? extends StringValuePattern> patternClass, final String expectedValue)","Matcher<ContentPattern<?>> valuePattern(
      final Class<? extends StringValuePattern> patternClass, final String expectedValue){
    return new TypeSafeDiagnosingMatcher<ContentPattern<?>>() {
      @Override
      protected boolean matchesSafely(ContentPattern<?> item, Description mismatchDescription) {
        return item.getClass().equals(patternClass) && item.getValue().equals(expectedValue);
      }

      @Override
      public void describeTo(Description description) {
        description.appendText(
            ""a value pattern of type ""
                + patternClass.getSimpleName()
                + "" with expected value ""
                + expectedValue);
      }
    };
  }"
"138","22","83","82","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java","633","650","-2147469119","-2147469043","0","0","Matcher<ContentPattern<?>> notValuePattern(
      final Class<? extends StringValuePattern> patternClass,
      final StringValuePattern unexpectedPattern)","Matcher<ContentPattern<?>> notValuePattern(
      final Class<? extends StringValuePattern> patternClass,
      final StringValuePattern unexpectedPattern){
    return new TypeSafeDiagnosingMatcher<ContentPattern<?>>() {
      @Override
      protected boolean matchesSafely(ContentPattern<?> item, Description mismatchDescription) {
        return item.getClass().equals(patternClass)
            && item.getValue().equals(unexpectedPattern.expectedValue);
      }

      @Override
      public void describeTo(Description description) {
        description.appendText(
            ""a value pattern of type ""
                + patternClass.getSimpleName()
                + "" with expected value ""
                + unexpectedPattern.expectedValue);
      }
    };
  }"
