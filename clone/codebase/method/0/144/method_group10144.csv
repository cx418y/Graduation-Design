"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1042","144","520","519","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java","52","58","-2147389515","-2147389458","0","0","void canRegisterStubAndFetchOnCorrectPort()","void canRegisterStubAndFetchOnCorrectPort(){
      givenThat(get(urlEqualTo(""/rule/test"")).willReturn(aResponse().withBody(""Rule test body"")));

      WireMockTestClient testClient = new WireMockTestClient(wireMockRule.port());

      assertThat(testClient.get(""/rule/test"").content(), is(""Rule test body""));
    }"
"1043","144","528","527","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java","157","164","-2147389458","-2147389399","0","0","void assertCanRegisterStubAndFetchOnCorrectPort(WireMockClassRule wireMockRule)","void assertCanRegisterStubAndFetchOnCorrectPort(WireMockClassRule wireMockRule){
      wireMockRule.givenThat(
          get(urlEqualTo(""/rule/test"")).willReturn(aResponse().withBody(""Rule test body"")));

      WireMockTestClient testClient = new WireMockTestClient(wireMockRule.port());

      assertThat(testClient.get(""/rule/test"").content(), is(""Rule test body""));
    }"
"1047","144","532","531","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java","307","313","-2147389136","-2147389083","0","0","void assertCanRegisterStubAndFetchOnCorrectPort(int port)","void assertCanRegisterStubAndFetchOnCorrectPort(int port){
    givenThat(get(urlEqualTo(""/rule/test"")).willReturn(aResponse().withBody(""Rule test body"")));

    WireMockTestClient testClient = new WireMockTestClient(port);

    assertThat(testClient.get(""/rule/test"").content(), is(""Rule test body""));
  }"
