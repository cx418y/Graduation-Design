"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1176","163","590","589","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java","81","88","-2147375948","-2147375898","0","0","void shouldReturnStubOnSpecifiedPort()","void shouldReturnStubOnSpecifiedPort(){
    startServerWithDefaultKeystore();
    stubFor(
        get(urlEqualTo(""/https-test""))
            .willReturn(aResponse().withStatus(200).withBody(""HTTPS content"")));

    assertThat(contentFor(url(""/https-test"")), is(""HTTPS content""));
  }"
"1179","163","596","595","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java","181","189","-2147375668","-2147375603","0","0","void acceptsAlternativeKeystore()","void acceptsAlternativeKeystore(){
    String testKeystorePath = Resources.getResource(""test-keystore"").toString();
    startServerWithKeystore(testKeystorePath);
    stubFor(
        get(urlEqualTo(""/https-test""))
            .willReturn(aResponse().withStatus(200).withBody(""HTTPS content"")));

    assertThat(contentFor(url(""/https-test"")), is(""HTTPS content""));
  }"
