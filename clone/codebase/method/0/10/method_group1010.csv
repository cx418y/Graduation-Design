"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"71","10","34","33","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java","426","442","-2147475309","-2147475192","0","0","void objectsShouldBeEqualOnSameExpectedValue()","void objectsShouldBeEqualOnSameExpectedValue(){
    MatchesJsonPathPattern a =
        new MatchesJsonPathPattern(""$.searchCriteria[?(@.customerId == '104903')].date"");
    MatchesJsonPathPattern b =
        new MatchesJsonPathPattern(""$.searchCriteria[?(@.customerId == '104903')].date"");
    MatchesJsonPathPattern c =
        new MatchesJsonPathPattern(""$.searchCriteria[?(@.customerId == '1234')].date"");

    assertEquals(a, b);
    assertEquals(a.hashCode(), b.hashCode());
    assertEquals(b, a);
    assertEquals(b.hashCode(), a.hashCode());
    assertNotEquals(a, c);
    assertNotEquals(a.hashCode(), c.hashCode());
    assertNotEquals(b, c);
    assertNotEquals(b.hashCode(), c.hashCode());
  }"
"139","10","38","37","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java","78","91","-2147469043","-2147468923","0","0","void objectsShouldBeEqualOnSameExpectedValue()","void objectsShouldBeEqualOnSameExpectedValue(){
    UrlPathPattern a = WireMock.urlPathMatching(""/things/.*"");
    UrlPathPattern b = WireMock.urlPathMatching(""/things/.*"");
    UrlPathPattern c = WireMock.urlPathMatching(""/test/.*"");

    assertEquals(a, b);
    assertEquals(a.hashCode(), b.hashCode());
    assertEquals(b, a);
    assertEquals(b.hashCode(), a.hashCode());
    assertNotEquals(a, c);
    assertNotEquals(a.hashCode(), c.hashCode());
    assertNotEquals(b, c);
    assertNotEquals(b.hashCode(), c.hashCode());
  }"
"152","10","34","39","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/NegativeContainsPatternTest.java","45","58","-2147468137","-2147468020","0","0","void objectsShouldBeEqualOnSameExpectedValue()","void objectsShouldBeEqualOnSameExpectedValue(){
    NegativeContainsPattern a = new NegativeContainsPattern(""doNotContain"");
    NegativeContainsPattern b = new NegativeContainsPattern(""doNotContain"");
    NegativeContainsPattern c = new NegativeContainsPattern(""somethingElse"");

    assertEquals(a, b);
    assertEquals(a.hashCode(), b.hashCode());
    assertEquals(b, a);
    assertEquals(b.hashCode(), a.hashCode());
    assertNotEquals(a, c);
    assertNotEquals(a.hashCode(), c.hashCode());
    assertNotEquals(b, c);
    assertNotEquals(b.hashCode(), c.hashCode());
  }"
"160","10","34","40","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/AbsentPatternTest.java","40","53","-2147467429","-2147467312","0","0","void objectsShouldBeEqualOnSameExpectedValue()","void objectsShouldBeEqualOnSameExpectedValue(){
    AbsentPattern a = new AbsentPattern(""someString"");
    AbsentPattern b = new AbsentPattern(""someString"");
    AbsentPattern c = new AbsentPattern(""someOtherString"");

    assertEquals(a, b);
    assertEquals(a.hashCode(), b.hashCode());
    assertEquals(b, a);
    assertEquals(b.hashCode(), a.hashCode());
    assertNotEquals(a, c);
    assertNotEquals(a.hashCode(), c.hashCode());
    assertNotEquals(b, c);
    assertNotEquals(b.hashCode(), c.hashCode());
  }"
"176","10","34","41","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/RegexValuePatternTest.java","58","71","-2147465858","-2147465741","0","0","void objectsShouldBeEqualOnSameExpectedValue()","void objectsShouldBeEqualOnSameExpectedValue(){
    RegexPattern a = new RegexPattern(""test"");
    RegexPattern b = new RegexPattern(""test"");
    RegexPattern c = new RegexPattern(""anotherTest"");

    assertEquals(a, b);
    assertEquals(a.hashCode(), b.hashCode());
    assertEquals(b, a);
    assertEquals(b.hashCode(), a.hashCode());
    assertNotEquals(a, c);
    assertNotEquals(a.hashCode(), c.hashCode());
    assertNotEquals(b, c);
    assertNotEquals(b.hashCode(), c.hashCode());
  }"
"197","10","34","40","0","/Users/macbook/Desktop/design/open/wiremock/src/test/java/com/github/tomakehurst/wiremock/matching/ContainsPatternTest.java","40","53","-2147464104","-2147463987","0","0","void objectsShouldBeEqualOnSameExpectedValue()","void objectsShouldBeEqualOnSameExpectedValue(){
    ContainsPattern a = new ContainsPattern(""someString"");
    ContainsPattern b = new ContainsPattern(""someString"");
    ContainsPattern c = new ContainsPattern(""someOtherString"");

    assertEquals(a, b);
    assertEquals(a.hashCode(), b.hashCode());
    assertEquals(b, a);
    assertEquals(b.hashCode(), a.hashCode());
    assertNotEquals(a, c);
    assertNotEquals(a.hashCode(), c.hashCode());
    assertNotEquals(b, c);
    assertNotEquals(b.hashCode(), c.hashCode());
  }"
