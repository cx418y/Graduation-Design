"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"559","93","299","298","0","/Users/macbook/Desktop/design/open/retrofit/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/ObservableTest.java","182","189","-2147418169","-2147418101","0","0","void resultFailure()","void resultFailure(){
    server.enqueue(new MockResponse().setSocketPolicy(DISCONNECT_AFTER_REQUEST));

    RecordingSubscriber<Result<String>> subscriber = subscriberRule.create();
    service.result().unsafeSubscribe(subscriber);
    assertThat(subscriber.takeValue().error()).isInstanceOf(IOException.class);
    subscriber.assertCompleted();
  }"
"605","93","299","298","0","/Users/macbook/Desktop/design/open/retrofit/retrofit-adapters/rxjava/src/test/java/retrofit2/adapter/rxjava/SingleTest.java","178","185","-2147413655","-2147413587","0","0","void resultFailure()","void resultFailure(){
    server.enqueue(new MockResponse().setSocketPolicy(DISCONNECT_AFTER_REQUEST));

    RecordingSubscriber<Result<String>> subscriber = subscriberRule.create();
    service.result().unsafeSubscribe(subscriber);
    assertThat(subscriber.takeValue().error()).isInstanceOf(IOException.class);
    subscriber.assertCompleted();
  }"
