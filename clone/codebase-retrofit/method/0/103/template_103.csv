"templateId","methodName","templateCommon","diffDetails"
"0","2.0","License, Version 2.0(the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package retrofit2.converter.wire;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.fail;
import static retrofit2.converter.protobuf.PhoneProtos.Phone;[*1*] 

import com.google.protobuf.ExtensionRegistry;[*2*] 
import com.google.protobuf.InvalidProtocolBufferException;[*3*] 
import java.io.IOException;
import java.util.List;
import okhttp3.mockwebserver.MockResponse;
import okhttp3.mockwebserver.MockWebServer;
import okhttp3.mockwebserver.RecordedRequest;
import okio.Buffer;
import okio.ByteString;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import retrofit2.Call;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.http.Body;
import retrofit2.http.GET;
import retrofit2.http.POST;

public final class WireConverterFactoryTest {
  interface Service{
    @GET(""/"")
    Call<Phone> get();

    @POST(""/"")
    Call<Phone> post(@Body Phone impl);

    @GET(""/"")
    Call<String> wrongClass();

    @GET(""/"")
    Call<List<String>> wrongType();
  }
","[*1*]:
1, 0.5, import java.io.EOFException;
[*2*]:
[*3*]:
"
