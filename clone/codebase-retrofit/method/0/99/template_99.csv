"templateId","methodName","templateCommon","diffDetails"
"0","resultThrowingInOnNextDeliveredToError","void resultThrowingInOnNextDeliveredToError(){
    server.enqueue(new MockResponse());[*1*] 

    RecordingSubscriber<Result<String>> subscriber = subscriberRule.create();
    final RuntimeException e = new RuntimeException();
    service
        .result()
        .safeSubscribe(
            new ForwardingSubscriber<Result<String>>(subscriber) {
              @Override
              public void onNext(Result<String> value) {
                throw e;
              }
            });

    subscriber.assertError(e);
  }
","[*1*]:
1, 0.14285714285714285,     server.enqueue(new MockResponse().setBody(""Hi""));
"
