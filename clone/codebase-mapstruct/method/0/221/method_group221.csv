"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1330","221","731","730","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/internal/model/source/SelectionParametersTest.java","305","321","-2147334440","-2147334261","0","0","void testEqualsQualifyingNamesInDifferentOrder()","void testEqualsQualifyingNamesInDifferentOrder(){
        List<String> qualifyingNames = Arrays.asList( ""language"", ""german"" );
        TypeMirror resultType = new TestTypeMirror( ""resultType"" );
        List<TypeMirror> qualifiers = new ArrayList<>();
        qualifiers.add( new TestTypeMirror( ""org.mapstruct.test.SomeType"" ) );
        qualifiers.add( new TestTypeMirror( ""org.mapstruct.test.SomeOtherType"" ) );
        SelectionParameters params = new SelectionParameters( qualifiers, qualifyingNames, resultType, typeUtils );

        List<String> qualifyingNames2 = Arrays.asList( ""german"", ""language"" );
        List<TypeMirror> qualifiers2 = new ArrayList<>();
        qualifiers2.add( new TestTypeMirror( ""org.mapstruct.test.SomeOtherType"" ) );
        qualifiers2.add( new TestTypeMirror( ""org.mapstruct.test.SomeType"" ) );
        SelectionParameters params2 = new SelectionParameters( qualifiers2, qualifyingNames2, resultType, typeUtils );

        assertThat( params.equals( params2 ) ).as( ""Different order for qualifyingNames"" ).isFalse();
        assertThat( params2.equals( params ) ).as( ""Different order for qualifyingNames"" ).isFalse();
    }"
"1331","221","731","734","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/internal/model/source/SelectionParametersTest.java","324","340","-2147334261","-2147334082","0","0","void testEqualsResultTypeOneNull()","void testEqualsResultTypeOneNull(){
        List<String> qualifyingNames = Arrays.asList( ""language"", ""german"" );
        TypeMirror resultType = new TestTypeMirror( ""resultType"" );
        List<TypeMirror> qualifiers = new ArrayList<>();
        qualifiers.add( new TestTypeMirror( ""org.mapstruct.test.SomeType"" ) );
        qualifiers.add( new TestTypeMirror( ""org.mapstruct.test.SomeOtherType"" ) );
        SelectionParameters params = new SelectionParameters( qualifiers, qualifyingNames, resultType, typeUtils );

        List<String> qualifyingNames2 = Arrays.asList( ""language"", ""german"" );
        List<TypeMirror> qualifiers2 = new ArrayList<>();
        qualifiers2.add( new TestTypeMirror( ""org.mapstruct.test.SomeType"" ) );
        qualifiers2.add( new TestTypeMirror( ""org.mapstruct.test.SomeOtherType"" ) );
        SelectionParameters params2 = new SelectionParameters( qualifiers2, qualifyingNames2, null, typeUtils );

        assertThat( params.equals( params2 ) ).as( ""Second null resultType"" ).isFalse();
        assertThat( params2.equals( params ) ).as( ""First null resultType"" ).isFalse();
    }"
"1332","221","740","739","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/internal/model/source/SelectionParametersTest.java","343","360","-2147334082","-2147333894","0","0","void testAllEqual()","void testAllEqual(){
        List<String> qualifyingNames = Arrays.asList( ""language"", ""german"" );
        TypeMirror resultType = new TestTypeMirror( ""resultType"" );
        List<TypeMirror> qualifiers = new ArrayList<>();
        qualifiers.add( new TestTypeMirror( ""org.mapstruct.test.SomeType"" ) );
        qualifiers.add( new TestTypeMirror( ""org.mapstruct.test.SomeOtherType"" ) );
        SelectionParameters params = new SelectionParameters( qualifiers, qualifyingNames, resultType, typeUtils );

        List<String> qualifyingNames2 = Arrays.asList( ""language"", ""german"" );
        TypeMirror resultType2 = new TestTypeMirror( ""resultType"" );
        List<TypeMirror> qualifiers2 = new ArrayList<>();
        qualifiers2.add( new TestTypeMirror( ""org.mapstruct.test.SomeType"" ) );
        qualifiers2.add( new TestTypeMirror( ""org.mapstruct.test.SomeOtherType"" ) );
        SelectionParameters params2 = new SelectionParameters( qualifiers2, qualifyingNames2, resultType2, typeUtils );

        assertThat( params.equals( params2 ) ).as( ""All equal"" ).isTrue();
        assertThat( params2.equals( params ) ).as( ""All equal"" ).isTrue();
    }"
"1333","221","740","741","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/internal/model/source/SelectionParametersTest.java","363","380","-2147333894","-2147333706","0","0","void testDifferentResultTypes()","void testDifferentResultTypes(){
        List<String> qualifyingNames = Arrays.asList( ""language"", ""german"" );
        TypeMirror resultType = new TestTypeMirror( ""resultType"" );
        List<TypeMirror> qualifiers = new ArrayList<>();
        qualifiers.add( new TestTypeMirror( ""org.mapstruct.test.SomeType"" ) );
        qualifiers.add( new TestTypeMirror( ""org.mapstruct.test.SomeOtherType"" ) );
        SelectionParameters params = new SelectionParameters( qualifiers, qualifyingNames, resultType, typeUtils );

        List<String> qualifyingNames2 = Arrays.asList( ""language"", ""german"" );
        TypeMirror resultType2 = new TestTypeMirror( ""otherResultType"" );
        List<TypeMirror> qualifiers2 = new ArrayList<>();
        qualifiers2.add( new TestTypeMirror( ""org.mapstruct.test.SomeType"" ) );
        qualifiers2.add( new TestTypeMirror( ""org.mapstruct.test.SomeOtherType"" ) );
        SelectionParameters params2 = new SelectionParameters( qualifiers2, qualifyingNames2, resultType2, typeUtils );

        assertThat( params.equals( params2 ) ).as( ""Different resultType"" ).isFalse();
        assertThat( params2.equals( params ) ).as( ""Different resultType"" ).isFalse();
    }"
