"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1134","197","635","634","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/test/selection/methodgenerics/multiple/MultipleTypeVarTest.java","39","51","-2147359562","-2147359475","0","0","void testGenericReturnTypeVarBothGeneric()","void testGenericReturnTypeVarBothGeneric(){

        ReturnTypeHasMultipleTypeVarBothGenericMapper.Pair pair
            = new ReturnTypeHasMultipleTypeVarBothGenericMapper.Pair( ""test"", 5L );
        ReturnTypeHasMultipleTypeVarBothGenericMapper.Source src =
            new ReturnTypeHasMultipleTypeVarBothGenericMapper.Source( pair );
        ReturnTypeHasMultipleTypeVarBothGenericMapper.Target target =
            ReturnTypeHasMultipleTypeVarBothGenericMapper.INSTANCE.toTarget( src );

        assertThat( target ).isNotNull();
        assertThat( target.getProp() ).isNotNull();
        assertThat( target.getProp() ).containsExactly( entry( ""test"", 5L ) );
    }"
"1135","197","635","634","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/test/selection/methodgenerics/multiple/MultipleTypeVarTest.java","55","67","-2147359475","-2147359388","0","0","void testGenericReturnTypeVarBothGenericArgumentsFlipped()","void testGenericReturnTypeVarBothGenericArgumentsFlipped(){

        ReturnTypeHasMultipleTypeVarBothArgumentsFlippedGenericMapper.Pair pair
            = new ReturnTypeHasMultipleTypeVarBothArgumentsFlippedGenericMapper.Pair( ""test"", 5L );
        ReturnTypeHasMultipleTypeVarBothArgumentsFlippedGenericMapper.Source src =
            new ReturnTypeHasMultipleTypeVarBothArgumentsFlippedGenericMapper.Source( pair );
        ReturnTypeHasMultipleTypeVarBothArgumentsFlippedGenericMapper.Target target =
            ReturnTypeHasMultipleTypeVarBothArgumentsFlippedGenericMapper.INSTANCE.toTarget( src );

        assertThat( target ).isNotNull();
        assertThat( target.getProp() ).isNotNull();
        assertThat( target.getProp() ).containsExactly( entry( ""test"", 5L ) );
    }"
