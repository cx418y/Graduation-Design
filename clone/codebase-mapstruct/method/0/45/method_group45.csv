"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"243","45","154","153","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/test/collection/CollectionMappingTest.java","252","260","-2147455788","-2147455721","0","0","void shouldMapIntegerSetToRawSet()","void shouldMapIntegerSetToRawSet(){
        Source source = new Source();
        source.setIntegerSet( new HashSet<>( Arrays.asList( 1, 2 ) ) );

        Target target = SourceTargetMapper.INSTANCE.sourceToTarget( source );

        assertThat( target ).isNotNull();
        assertThat( target.getSet() ).containsOnly( 1, 2 );
    }"
"244","45","154","164","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/test/collection/CollectionMappingTest.java","264","272","-2147455721","-2147455654","0","0","void shouldMapIntegerSetToStringSet()","void shouldMapIntegerSetToStringSet(){
        Source source = new Source();
        source.setAnotherIntegerSet( new HashSet<>( Arrays.asList( 1, 2 ) ) );

        Target target = SourceTargetMapper.INSTANCE.sourceToTarget( source );

        assertThat( target ).isNotNull();
        assertThat( target.getAnotherStringSet() ).containsOnly( ""1"", ""2"" );
    }"
