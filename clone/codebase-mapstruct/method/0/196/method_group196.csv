"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"1115","196","632","631","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/test/selection/primitives/PrimitiveVsWrappedSelectionTest.java","24","41","-2147361479","-2147361356","0","0","void shouldAlwaysSelectWrappedAndExplicitlyTypeConvertWrappedtoPrimitive()","void shouldAlwaysSelectWrappedAndExplicitlyTypeConvertWrappedtoPrimitive(){

        WrappedMapper.setCalledUpon( false );
        PrimitiveMapper.setCalledUpon( false );

        Source source = new Source();
        source.setPrimitiveInt( 15 );
        source.setWrappedInt( 12 );

        Target target = SourceTargetMapper.INSTANCE.toTarget( source );
        assertThat( target ).isNotNull();
        assertThat( target.getPrimitiveInt().getValue() ).isEqualTo( 15L );
        assertThat( target.getWrappedInt().getValue() ).isEqualTo( 12L );

        assertThat( WrappedMapper.isCalledUpon() ).isTrue();
        assertThat( PrimitiveMapper.isCalledUpon() ).isFalse();

    }"
"1117","196","632","633","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/test/selection/primitives/PrimitiveVsWrappedSelectionTest.java","66","83","-2147361233","-2147361110","0","0","void shouldSelectWrappedMapperAlsoForPrimitive()","void shouldSelectWrappedMapperAlsoForPrimitive(){

        WrappedMapper.setCalledUpon( false );
        PrimitiveMapper.setCalledUpon( false );

        Source source = new Source();
        source.setPrimitiveInt( 15 );
        source.setWrappedInt( 12 );

        Target target = SourceTargetMapperWrapped.INSTANCE.toTarget( source );
        assertThat( target ).isNotNull();
        assertThat( target.getPrimitiveInt().getValue() ).isEqualTo( 15L );
        assertThat( target.getWrappedInt().getValue() ).isEqualTo( 12L );

        assertThat( WrappedMapper.isCalledUpon() ).isTrue();
        assertThat( PrimitiveMapper.isCalledUpon() ).isFalse();

    }"
