"templateId","methodName","templateCommon","diffDetails"
"0","shouldMapDateTimeToXmlGregorianCalendar","void shouldMapDateTimeToXmlGregorianCalendar(){

        DateTimeBean  in = new DateTimeBean();
[*1*] 
        in.setDateTime( dt );
        XmlGregorianCalendarBean res = DateTimeToXmlGregorianCalendar.INSTANCE.toXmlGregorianCalendarBean( in );

        assertThat( res.getxMLGregorianCalendar().getYear() ).isEqualTo( 2010 );[*2*] 
        assertThat( res.getxMLGregorianCalendar().getMonth() ).isEqualTo( 1 );[*3*] 
        assertThat( res.getxMLGregorianCalendar().getDay() ).isEqualTo( 15 );[*4*] 
[*5*] 
[*6*] 
[*7*] 
        assertThat( res.getxMLGregorianCalendar().getHour() ).isEqualTo( 1 );
        assertThat( res.getxMLGregorianCalendar().getMinute() ).isEqualTo( 1 );
        assertThat( res.getxMLGregorianCalendar().getSecond() ).isEqualTo( 1 );
        assertThat( res.getxMLGregorianCalendar().getMillisecond() ).isEqualTo( 100 );
[*8*] 
        assertThat( res.getxMLGregorianCalendar().getTimezone() ).isEqualTo( DatatypeConstants.FIELD_UNDEFINED );[*9*] 
    }
","[*1*]:
2, 0.4,         DateTime dt = new DateTime(2010, 1, 15, 1, 1 );
1, 0.2,         DateTime dt = new DateTime(2010, 1, 15, 1, 1, 1, 100, DateTimeZone.forOffsetHours( -1 ) );
1, 0.2,         LocalDateTime dt = new LocalDateTime(2010, 1, 15, 1, 1, 1, 100 );
1, 0.2,         LocalTime dt = new LocalTime( 1, 1, 0, 100 );
[*2*]:
[*3*]:
[*4*]:
[*5*]:
1, 0.2,         assertThat( res.getxMLGregorianCalendar().getYear() ).isEqualTo( DatatypeConstants.FIELD_UNDEFINED );
[*6*]:
1, 0.2,         assertThat( res.getxMLGregorianCalendar().getMonth() ).isEqualTo( DatatypeConstants.FIELD_UNDEFINED );
[*7*]:
1, 0.2,         assertThat( res.getxMLGregorianCalendar().getDay() ).isEqualTo( DatatypeConstants.FIELD_UNDEFINED );
[*8*]:
1, 0.2,         assertThat( res.getxMLGregorianCalendar().getTimezone() ).isEqualTo( -60 );
[*9*]:
"
