"methodId","CG_T3","CG_T2","CG_T1","tokenCsvId","filePath","startLine","endLine","oriStartToken","oriEndToken","startToken","endToken","signature","body"
"285","56","184","183","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/test/collection/wildcard/WildCardTest.java","43","55","-2147451590","-2147451523","0","0","void shouldGenerateExtendsBoundSourceForgedIterableMethod()","void shouldGenerateExtendsBoundSourceForgedIterableMethod(){

        ExtendsBoundSource source = new ExtendsBoundSource();

        Target target = ExtendsBoundSourceTargetMapper.STM.map( source );

        assertThat( target ).isNotNull();
        assertThat( target.getElements() ).isNull();
        generatedSource.forMapper( ExtendsBoundSourceTargetMapper.class )
            .content()
            .as( ""Should not contain FQN after extends"" )
            .doesNotContain( ""? extends org.mapstruct.ap.test.collection.wildcard.Idea"" );
    }"
"286","56","184","187","0","/Users/macbook/Desktop/design/open/mapstruct/processor/src/test/java/org/mapstruct/ap/test/collection/wildcard/WildCardTest.java","65","77","-2147451523","-2147451456","0","0","void shouldGenerateSuperBoundTargetForgedIterableMethod()","void shouldGenerateSuperBoundTargetForgedIterableMethod(){

        Source source = new Source();

        SuperBoundTarget target = SourceSuperBoundTargetMapper.STM.map( source );

        assertThat( target ).isNotNull();
        assertThat( target.getElements() ).isNull();
        generatedSource.forMapper( SourceSuperBoundTargetMapper.class )
            .content()
            .as( ""Should not contain FQN after super"" )
            .doesNotContain( ""? super org.mapstruct.ap.test.collection.wildcard.Idea"" );
    }"
